export const enum tsx {
  'identifier' = 1,
  'hash_bang_line' = 2,
  'export' = 3,
  '*' = 4,
  'default' = 5,
  '=' = 7,
  'as' = 8,
  'namespace' = 9,
  '{' = 10,
  ',' = 11,
  '}' = 12,
  'typeof' = 13,
  'from' = 15,
  'with' = 16,
  'assert' = 17,
  'var' = 18,
  'let' = 19,
  'const' = 20,
  '!' = 21,
  'else' = 22,
  'if' = 23,
  'switch' = 24,
  'for' = 25,
  '(' = 26,
  ';' = 27,
  ')' = 28,
  'await' = 29,
  'in' = 30,
  'of' = 31,
  'while' = 32,
  'do' = 33,
  'try' = 34,
  'break' = 35,
  'continue' = 36,
  'debugger' = 37,
  'return' = 38,
  'throw' = 39,
  ':' = 40,
  'case' = 41,
  'catch' = 42,
  'finally' = 43,
  'yield' = 44,
  '[' = 45,
  ']' = 46,
  'glimmer_opening_tag' = 48,
  'glimmer_closing_tag' = 49,
  'html_character_reference' = 50,
  '>' = 51,
  '.' = 53,
  '</' = 54,
  '/>' = 55,
  '"' = 56,
  "'" = 57,
  'async' = 61,
  'function' = 62,
  '=>' = 63,
  '?.' = 64,
  'new' = 65,
  'using' = 66,
  '+=' = 67,
  '-=' = 68,
  '*=' = 69,
  '/=' = 70,
  '%=' = 71,
  '^=' = 72,
  '&=' = 73,
  '|=' = 74,
  '>>=' = 75,
  '>>>=' = 76,
  '<<=' = 77,
  '**=' = 78,
  '&&=' = 79,
  '||=' = 80,
  '??=' = 81,
  '...' = 82,
  '&&' = 83,
  '||' = 84,
  '>>' = 85,
  '>>>' = 86,
  '<<' = 87,
  '&' = 88,
  '^' = 89,
  '|' = 90,
  '+' = 91,
  '-' = 92,
  '/' = 93,
  '%' = 94,
  '**' = 95,
  '<' = 96,
  '<=' = 97,
  '==' = 98,
  '===' = 99,
  '!=' = 100,
  '!==' = 101,
  '>=' = 102,
  '??' = 103,
  'instanceof' = 104,
  '~' = 105,
  'void' = 106,
  'delete' = 107,
  '++' = 108,
  '--' = 109,
  'escape_sequence' = 112,
  'comment' = 113,
  '`' = 114,
  '${' = 115,
  'regex_pattern' = 117,
  'regex_flags' = 118,
  'number' = 119,
  'private_property_identifier' = 120,
  'target' = 121,
  'meta' = 122,
  'this' = 123,
  'super' = 124,
  'true' = 125,
  'false' = 126,
  'null' = 127,
  'undefined' = 128,
  '@' = 129,
  'static' = 130,
  'readonly' = 131,
  'get' = 132,
  'set' = 133,
  '?' = 134,
  'declare' = 135,
  'public' = 136,
  'private' = 137,
  'protected' = 138,
  'override' = 139,
  'any' = 141,
  'boolean' = 143,
  'symbol' = 145,
  'abstract' = 147,
  'accessor' = 148,
  'satisfies' = 149,
  'require' = 150,
  'extends' = 151,
  'implements' = 152,
  'global' = 153,
  'interface' = 154,
  'enum' = 155,
  '-?:' = 156,
  '+?:' = 157,
  '?:' = 158,
  'infer' = 160,
  'is' = 161,
  'keyof' = 162,
  'unique symbol' = 163,
  'unknown' = 164,
  'never' = 165,
  '{|' = 166,
  '|}' = 167,
  'string_fragment' = 169,
  'html_comment' = 171,
  'jsx_text' = 172,
  'program' = 175,
  'export_statement' = 176,
  'namespace_export' = 177,
  'export_clause' = 178,
  'export_specifier' = 179,
  'import' = 182,
  'import_statement' = 183,
  'import_clause' = 184,
  'namespace_import' = 186,
  'named_imports' = 187,
  'import_specifier' = 188,
  'import_attribute' = 189,
  'expression_statement' = 191,
  'variable_declaration' = 192,
  'lexical_declaration' = 193,
  'variable_declarator' = 194,
  'statement_block' = 195,
  'else_clause' = 196,
  'if_statement' = 197,
  'switch_statement' = 198,
  'for_statement' = 199,
  'for_in_statement' = 200,
  'while_statement' = 202,
  'do_statement' = 203,
  'try_statement' = 204,
  'with_statement' = 205,
  'break_statement' = 206,
  'continue_statement' = 207,
  'debugger_statement' = 208,
  'return_statement' = 209,
  'throw_statement' = 210,
  'empty_statement' = 211,
  'labeled_statement' = 212,
  'switch_body' = 213,
  'switch_case' = 214,
  'switch_default' = 215,
  'catch_clause' = 216,
  'finally_clause' = 217,
  'parenthesized_expression' = 218,
  'yield_expression' = 221,
  'object' = 222,
  'object_pattern' = 223,
  'assignment_pattern' = 224,
  'object_assignment_pattern' = 225,
  'array' = 226,
  'array_pattern' = 227,
  'glimmer_template' = 228,
  'jsx_element' = 229,
  'jsx_expression' = 230,
  'jsx_opening_element' = 231,
  'nested_identifier' = 232,
  'jsx_namespace_name' = 233,
  'jsx_closing_element' = 234,
  'jsx_self_closing_element' = 235,
  'jsx_attribute' = 236,
  'class' = 238,
  'class_declaration' = 239,
  'class_heritage' = 240,
  'function_expression' = 241,
  'function_declaration' = 242,
  'generator_function' = 243,
  'generator_function_declaration' = 244,
  'arrow_function' = 245,
  'optional_chain' = 248,
  'call_expression' = 249,
  'new_expression' = 250,
  'await_expression' = 251,
  'member_expression' = 252,
  'subscript_expression' = 253,
  'assignment_expression' = 254,
  'augmented_assignment_expression' = 256,
  'spread_element' = 259,
  'ternary_expression' = 260,
  'binary_expression' = 261,
  'unary_expression' = 262,
  'update_expression' = 263,
  'sequence_expression' = 264,
  'string' = 265,
  'template_string' = 266,
  'template_substitution' = 267,
  'regex' = 268,
  'meta_property' = 269,
  'arguments' = 270,
  'decorator' = 271,
  'class_body' = 274,
  'formal_parameters' = 275,
  'class_static_block' = 276,
  'rest_pattern' = 278,
  'method_definition' = 279,
  'pair' = 280,
  'pair_pattern' = 281,
  'computed_property_name' = 283,
  'public_field_definition' = 284,
  'non_null_expression' = 286,
  'method_signature' = 287,
  'abstract_method_signature' = 288,
  'function_signature' = 289,
  'as_expression' = 291,
  'satisfies_expression' = 292,
  'instantiation_expression' = 293,
  'import_require_clause' = 294,
  'extends_clause' = 295,
  'implements_clause' = 297,
  'ambient_declaration' = 298,
  'abstract_class_declaration' = 299,
  'module' = 300,
  'internal_module' = 301,
  'import_alias' = 303,
  'nested_type_identifier' = 304,
  'interface_declaration' = 305,
  'extends_type_clause' = 306,
  'enum_declaration' = 307,
  'enum_body' = 308,
  'enum_assignment' = 309,
  'type_alias_declaration' = 310,
  'accessibility_modifier' = 311,
  'override_modifier' = 312,
  'required_parameter' = 313,
  'optional_parameter' = 314,
  'omitting_type_annotation' = 316,
  'adding_type_annotation' = 317,
  'opting_type_annotation' = 318,
  'type_annotation' = 319,
  'asserts' = 322,
  'asserts_annotation' = 323,
  'type' = 324,
  'optional_type' = 327,
  'rest_type' = 328,
  'constructor_type' = 330,
  'template_type' = 332,
  'template_literal_type' = 333,
  'infer_type' = 334,
  'conditional_type' = 335,
  'generic_type' = 336,
  'type_predicate' = 337,
  'type_predicate_annotation' = 338,
  'type_query' = 343,
  'index_type_query' = 344,
  'lookup_type' = 345,
  'mapped_type_clause' = 346,
  'literal_type' = 347,
  'existential_type' = 349,
  'flow_maybe_type' = 350,
  'parenthesized_type' = 351,
  'predefined_type' = 352,
  'type_arguments' = 353,
  'object_type' = 354,
  'call_signature' = 355,
  'property_signature' = 356,
  'type_parameters' = 357,
  'type_parameter' = 358,
  'default_type' = 359,
  'constraint' = 360,
  'construct_signature' = 361,
  'index_signature' = 362,
  'array_type' = 363,
  'tuple_type' = 364,
  'readonly_type' = 365,
  'union_type' = 366,
  'intersection_type' = 367,
  'function_type' = 368,
  'interface_body' = 398,
  'property_identifier' = 399,
  'shorthand_property_identifier' = 400,
  'shorthand_property_identifier_pattern' = 401,
  'statement_identifier' = 402,
  'this_type' = 403,
  'type_identifier' = 404,
}
