export const enum typescript {
  'identifier' = 1,
  'hash_bang_line' = 2,
  'export' = 3,
  '*' = 4,
  'default' = 5,
  'type' = 311,
  '=' = 7,
  'as' = 8,
  'namespace' = 9,
  '{' = 10,
  ',' = 11,
  '}' = 12,
  'typeof' = 13,
  'import' = 176,
  'from' = 15,
  'with' = 16,
  'assert' = 17,
  'var' = 18,
  'let' = 19,
  'const' = 20,
  '!' = 21,
  'else' = 22,
  'if' = 23,
  'switch' = 24,
  'for' = 25,
  '(' = 26,
  ';' = 27,
  ')' = 28,
  'await' = 29,
  'in' = 30,
  'of' = 31,
  'while' = 32,
  'do' = 33,
  'try' = 34,
  'break' = 35,
  'continue' = 36,
  'debugger' = 37,
  'return' = 38,
  'throw' = 39,
  ':' = 40,
  'case' = 41,
  'catch' = 42,
  'finally' = 43,
  'yield' = 44,
  '[' = 45,
  ']' = 46,
  'glimmer_opening_tag' = 48,
  'glimmer_closing_tag' = 49,
  '>' = 50,
  '.' = 51,
  '"' = 52,
  "'" = 53,
  'class' = 224,
  'async' = 55,
  'function' = 56,
  '=>' = 57,
  '?.' = 58,
  'new' = 59,
  'using' = 60,
  '+=' = 61,
  '-=' = 62,
  '*=' = 63,
  '/=' = 64,
  '%=' = 65,
  '^=' = 66,
  '&=' = 67,
  '|=' = 68,
  '>>=' = 69,
  '>>>=' = 70,
  '<<=' = 71,
  '**=' = 72,
  '&&=' = 73,
  '||=' = 74,
  '??=' = 75,
  '...' = 76,
  '&&' = 77,
  '||' = 78,
  '>>' = 79,
  '>>>' = 80,
  '<<' = 81,
  '&' = 82,
  '^' = 83,
  '|' = 84,
  '+' = 85,
  '-' = 86,
  '/' = 87,
  '%' = 88,
  '**' = 89,
  '<' = 90,
  '<=' = 91,
  '==' = 92,
  '===' = 93,
  '!=' = 94,
  '!==' = 95,
  '>=' = 96,
  '??' = 97,
  'instanceof' = 98,
  '~' = 99,
  'void' = 100,
  'delete' = 101,
  '++' = 102,
  '--' = 103,
  'string_fragment' = 163,
  'escape_sequence' = 106,
  'comment' = 107,
  '`' = 108,
  '${' = 109,
  'regex_pattern' = 111,
  'regex_flags' = 112,
  'number' = 113,
  'private_property_identifier' = 114,
  'target' = 115,
  'meta' = 116,
  'this' = 117,
  'super' = 118,
  'true' = 119,
  'false' = 120,
  'null' = 121,
  'undefined' = 122,
  '@' = 123,
  'static' = 124,
  'readonly' = 125,
  'get' = 126,
  'set' = 127,
  '?' = 128,
  'declare' = 129,
  'public' = 130,
  'private' = 131,
  'protected' = 132,
  'override' = 133,
  'module' = 287,
  'any' = 135,
  'boolean' = 137,
  'string' = 251,
  'symbol' = 139,
  'object' = 216,
  'abstract' = 141,
  'accessor' = 142,
  'satisfies' = 143,
  'require' = 144,
  'extends' = 145,
  'implements' = 146,
  'global' = 147,
  'interface' = 148,
  'enum' = 149,
  '-?:' = 150,
  '+?:' = 151,
  '?:' = 152,
  'asserts' = 309,
  'infer' = 154,
  'is' = 155,
  'keyof' = 156,
  'unique symbol' = 157,
  'unknown' = 158,
  'never' = 159,
  '{|' = 160,
  '|}' = 161,
  'html_comment' = 165,
  'jsx_text' = 166,
  'program' = 169,
  'export_statement' = 170,
  'namespace_export' = 171,
  'export_clause' = 172,
  'export_specifier' = 173,
  'import_statement' = 177,
  'import_clause' = 178,
  'namespace_import' = 180,
  'named_imports' = 181,
  'import_specifier' = 182,
  'import_attribute' = 183,
  'expression_statement' = 185,
  'variable_declaration' = 186,
  'lexical_declaration' = 187,
  'variable_declarator' = 188,
  'statement_block' = 189,
  'else_clause' = 190,
  'if_statement' = 191,
  'switch_statement' = 192,
  'for_statement' = 193,
  'for_in_statement' = 194,
  'while_statement' = 196,
  'do_statement' = 197,
  'try_statement' = 198,
  'with_statement' = 199,
  'break_statement' = 200,
  'continue_statement' = 201,
  'debugger_statement' = 202,
  'return_statement' = 203,
  'throw_statement' = 204,
  'empty_statement' = 205,
  'labeled_statement' = 206,
  'switch_body' = 207,
  'switch_case' = 208,
  'switch_default' = 209,
  'catch_clause' = 210,
  'finally_clause' = 211,
  'parenthesized_expression' = 212,
  'yield_expression' = 215,
  'object_pattern' = 217,
  'assignment_pattern' = 218,
  'object_assignment_pattern' = 219,
  'array' = 220,
  'array_pattern' = 221,
  'glimmer_template' = 222,
  'nested_identifier' = 223,
  'class_declaration' = 225,
  'class_heritage' = 226,
  'function_expression' = 227,
  'function_declaration' = 228,
  'generator_function' = 229,
  'generator_function_declaration' = 230,
  'arrow_function' = 231,
  'optional_chain' = 234,
  'call_expression' = 235,
  'new_expression' = 236,
  'await_expression' = 237,
  'member_expression' = 238,
  'subscript_expression' = 239,
  'assignment_expression' = 240,
  'augmented_assignment_expression' = 242,
  'spread_element' = 245,
  'ternary_expression' = 246,
  'binary_expression' = 247,
  'unary_expression' = 248,
  'update_expression' = 249,
  'sequence_expression' = 250,
  'template_string' = 252,
  'template_substitution' = 253,
  'regex' = 254,
  'meta_property' = 255,
  'arguments' = 256,
  'decorator' = 257,
  'class_body' = 260,
  'formal_parameters' = 261,
  'class_static_block' = 262,
  'rest_pattern' = 264,
  'method_definition' = 265,
  'pair' = 266,
  'pair_pattern' = 267,
  'computed_property_name' = 269,
  'public_field_definition' = 270,
  'non_null_expression' = 272,
  'method_signature' = 273,
  'abstract_method_signature' = 274,
  'function_signature' = 275,
  'type_assertion' = 277,
  'as_expression' = 278,
  'satisfies_expression' = 279,
  'instantiation_expression' = 280,
  'import_require_clause' = 281,
  'extends_clause' = 282,
  'implements_clause' = 284,
  'ambient_declaration' = 285,
  'abstract_class_declaration' = 286,
  'internal_module' = 288,
  'import_alias' = 290,
  'nested_type_identifier' = 291,
  'interface_declaration' = 292,
  'extends_type_clause' = 293,
  'enum_declaration' = 294,
  'enum_body' = 295,
  'enum_assignment' = 296,
  'type_alias_declaration' = 297,
  'accessibility_modifier' = 298,
  'override_modifier' = 299,
  'required_parameter' = 300,
  'optional_parameter' = 301,
  'omitting_type_annotation' = 303,
  'adding_type_annotation' = 304,
  'opting_type_annotation' = 305,
  'type_annotation' = 306,
  'asserts_annotation' = 310,
  'optional_type' = 314,
  'rest_type' = 315,
  'constructor_type' = 317,
  'template_type' = 319,
  'template_literal_type' = 320,
  'infer_type' = 321,
  'conditional_type' = 322,
  'generic_type' = 323,
  'type_predicate' = 324,
  'type_predicate_annotation' = 325,
  'type_query' = 330,
  'index_type_query' = 331,
  'lookup_type' = 332,
  'mapped_type_clause' = 333,
  'literal_type' = 334,
  'existential_type' = 336,
  'flow_maybe_type' = 337,
  'parenthesized_type' = 338,
  'predefined_type' = 339,
  'type_arguments' = 340,
  'object_type' = 341,
  'call_signature' = 342,
  'property_signature' = 343,
  'type_parameters' = 344,
  'type_parameter' = 345,
  'default_type' = 346,
  'constraint' = 347,
  'construct_signature' = 348,
  'index_signature' = 349,
  'array_type' = 350,
  'tuple_type' = 351,
  'readonly_type' = 352,
  'union_type' = 353,
  'intersection_type' = 354,
  'function_type' = 355,
  'interface_body' = 381,
  'property_identifier' = 382,
  'shorthand_property_identifier' = 383,
  'shorthand_property_identifier_pattern' = 384,
  'statement_identifier' = 385,
  'this_type' = 386,
  'type_identifier' = 387,
}
