export const enum javascript {
  'identifier' = 1,
  'hash_bang_line' = 2,
  'export' = 3,
  '*' = 4,
  'default' = 5,
  'as' = 6,
  '{' = 7,
  ',' = 8,
  '}' = 9,
  'from' = 11,
  'with' = 12,
  'var' = 13,
  'let' = 14,
  'const' = 15,
  'else' = 16,
  'if' = 17,
  'switch' = 18,
  'for' = 19,
  '(' = 20,
  ';' = 21,
  ')' = 22,
  'await' = 23,
  'in' = 24,
  'of' = 25,
  'while' = 26,
  'do' = 27,
  'try' = 28,
  'break' = 29,
  'continue' = 30,
  'debugger' = 31,
  'return' = 32,
  'throw' = 33,
  ':' = 34,
  'case' = 35,
  'catch' = 36,
  'finally' = 37,
  'yield' = 38,
  '=' = 39,
  '[' = 40,
  ']' = 41,
  'glimmer_opening_tag' = 43,
  'glimmer_closing_tag' = 44,
  'html_character_reference' = 45,
  '<' = 46,
  '>' = 47,
  '.' = 49,
  '</' = 50,
  '/>' = 51,
  '"' = 52,
  "'" = 53,
  'extends' = 57,
  'async' = 58,
  'function' = 59,
  '=>' = 60,
  'optional_chain' = 61,
  'new' = 62,
  '+=' = 63,
  '-=' = 64,
  '*=' = 65,
  '/=' = 66,
  '%=' = 67,
  '^=' = 68,
  '&=' = 69,
  '|=' = 70,
  '>>=' = 71,
  '>>>=' = 72,
  '<<=' = 73,
  '**=' = 74,
  '&&=' = 75,
  '||=' = 76,
  '??=' = 77,
  '...' = 78,
  '&&' = 79,
  '||' = 80,
  '>>' = 81,
  '>>>' = 82,
  '<<' = 83,
  '&' = 84,
  '^' = 85,
  '|' = 86,
  '+' = 87,
  '-' = 88,
  '/' = 89,
  '%' = 90,
  '**' = 91,
  '<=' = 92,
  '==' = 93,
  '===' = 94,
  '!=' = 95,
  '!==' = 96,
  '>=' = 97,
  '??' = 98,
  'instanceof' = 99,
  '!' = 100,
  '~' = 101,
  'typeof' = 102,
  'void' = 103,
  'delete' = 104,
  '++' = 105,
  '--' = 106,
  'escape_sequence' = 109,
  'comment' = 110,
  '`' = 111,
  '${' = 112,
  'regex_pattern' = 114,
  'regex_flags' = 115,
  'number' = 116,
  'private_property_identifier' = 117,
  'target' = 118,
  'meta' = 119,
  'this' = 120,
  'super' = 121,
  'true' = 122,
  'false' = 123,
  'null' = 124,
  'undefined' = 125,
  '@' = 126,
  'static' = 127,
  'static get' = 128,
  'get' = 129,
  'set' = 130,
  'string_fragment' = 132,
  '?' = 133,
  'html_comment' = 134,
  'jsx_text' = 135,
  'program' = 136,
  'export_statement' = 137,
  'namespace_export' = 138,
  'export_clause' = 139,
  'export_specifier' = 140,
  'import' = 143,
  'import_statement' = 144,
  'import_clause' = 145,
  'namespace_import' = 147,
  'named_imports' = 148,
  'import_specifier' = 149,
  'import_attribute' = 150,
  'expression_statement' = 152,
  'variable_declaration' = 153,
  'lexical_declaration' = 154,
  'variable_declarator' = 155,
  'statement_block' = 156,
  'else_clause' = 157,
  'if_statement' = 158,
  'switch_statement' = 159,
  'for_statement' = 160,
  'for_in_statement' = 161,
  'while_statement' = 163,
  'do_statement' = 164,
  'try_statement' = 165,
  'with_statement' = 166,
  'break_statement' = 167,
  'continue_statement' = 168,
  'debugger_statement' = 169,
  'return_statement' = 170,
  'throw_statement' = 171,
  'empty_statement' = 172,
  'labeled_statement' = 173,
  'switch_body' = 174,
  'switch_case' = 175,
  'switch_default' = 176,
  'catch_clause' = 177,
  'finally_clause' = 178,
  'parenthesized_expression' = 179,
  'yield_expression' = 182,
  'object' = 183,
  'object_pattern' = 184,
  'assignment_pattern' = 185,
  'object_assignment_pattern' = 186,
  'array' = 187,
  'array_pattern' = 188,
  'glimmer_template' = 189,
  'jsx_element' = 190,
  'jsx_expression' = 191,
  'jsx_opening_element' = 192,
  'jsx_namespace_name' = 194,
  'jsx_closing_element' = 195,
  'jsx_self_closing_element' = 196,
  'jsx_attribute' = 197,
  'class' = 199,
  'class_declaration' = 200,
  'class_heritage' = 201,
  'function_expression' = 202,
  'function_declaration' = 203,
  'generator_function' = 204,
  'generator_function_declaration' = 205,
  'arrow_function' = 206,
  'call_expression' = 207,
  'new_expression' = 208,
  'await_expression' = 209,
  'member_expression' = 210,
  'subscript_expression' = 211,
  'assignment_expression' = 212,
  'augmented_assignment_expression' = 214,
  'spread_element' = 217,
  'ternary_expression' = 218,
  'binary_expression' = 219,
  'unary_expression' = 220,
  'update_expression' = 221,
  'sequence_expression' = 222,
  'string' = 223,
  'template_string' = 224,
  'template_substitution' = 225,
  'regex' = 226,
  'meta_property' = 227,
  'arguments' = 228,
  'decorator' = 229,
  'class_body' = 232,
  'field_definition' = 233,
  'formal_parameters' = 234,
  'class_static_block' = 235,
  'rest_pattern' = 237,
  'method_definition' = 238,
  'pair' = 239,
  'pair_pattern' = 240,
  'computed_property_name' = 242,
  'property_identifier' = 264,
  'shorthand_property_identifier' = 265,
  'shorthand_property_identifier_pattern' = 266,
  'statement_identifier' = 267,
}

export const enum _javascript {
  identifier = 'identifier',
  hash_bang_line = 'hash_bang_line',
  export = 'export',
  default = 'default',
  as = 'as',
  from = 'from',
  with = 'with',
  var = 'var',
  let = 'let',
  const = 'const',
  else = 'else',
  if = 'if',
  switch = 'switch',
  for = 'for',
  await = 'await',
  in = 'in',
  of = 'of',
  while = 'while',
  do = 'do',
  try = 'try',
  break = 'break',
  continue = 'continue',
  debugger = 'debugger',
  return = 'return',
  throw = 'throw',
  case = 'case',
  catch = 'catch',
  finally = 'finally',
  yield = 'yield',
  glimmer_opening_tag = 'glimmer_opening_tag',
  glimmer_closing_tag = 'glimmer_closing_tag',
  html_character_reference = 'html_character_reference',
  extends = 'extends',
  async = 'async',
  function = 'function',
  optional_chain = 'optional_chain',
  new = 'new',
  instanceof = 'instanceof',
  typeof = 'typeof',
  void = 'void',
  delete = 'delete',
  escape_sequence = 'escape_sequence',
  comment = 'comment',
  regex_pattern = 'regex_pattern',
  regex_flags = 'regex_flags',
  number = 'number',
  private_property_identifier = 'private_property_identifier',
  target = 'target',
  meta = 'meta',
  this = 'this',
  super = 'super',
  true = 'true',
  false = 'false',
  null = 'null',
  undefined = 'undefined',
  static = 'static',
  get = 'get',
  set = 'set',
  string_fragment = 'string_fragment',
  html_comment = 'html_comment',
  jsx_text = 'jsx_text',
  program = 'program',
  export_statement = 'export_statement',
  namespace_export = 'namespace_export',
  export_clause = 'export_clause',
  export_specifier = 'export_specifier',
  import = 'import',
  import_statement = 'import_statement',
  import_clause = 'import_clause',
  namespace_import = 'namespace_import',
  named_imports = 'named_imports',
  import_specifier = 'import_specifier',
  import_attribute = 'import_attribute',
  expression_statement = 'expression_statement',
  variable_declaration = 'variable_declaration',
  lexical_declaration = 'lexical_declaration',
  variable_declarator = 'variable_declarator',
  statement_block = 'statement_block',
  else_clause = 'else_clause',
  if_statement = 'if_statement',
  switch_statement = 'switch_statement',
  for_statement = 'for_statement',
  for_in_statement = 'for_in_statement',
  while_statement = 'while_statement',
  do_statement = 'do_statement',
  try_statement = 'try_statement',
  with_statement = 'with_statement',
  break_statement = 'break_statement',
  continue_statement = 'continue_statement',
  debugger_statement = 'debugger_statement',
  return_statement = 'return_statement',
  throw_statement = 'throw_statement',
  empty_statement = 'empty_statement',
  labeled_statement = 'labeled_statement',
  switch_body = 'switch_body',
  switch_case = 'switch_case',
  switch_default = 'switch_default',
  catch_clause = 'catch_clause',
  finally_clause = 'finally_clause',
  parenthesized_expression = 'parenthesized_expression',
  yield_expression = 'yield_expression',
  object = 'object',
  object_pattern = 'object_pattern',
  assignment_pattern = 'assignment_pattern',
  object_assignment_pattern = 'object_assignment_pattern',
  array = 'array',
  array_pattern = 'array_pattern',
  glimmer_template = 'glimmer_template',
  jsx_element = 'jsx_element',
  jsx_expression = 'jsx_expression',
  jsx_opening_element = 'jsx_opening_element',
  jsx_namespace_name = 'jsx_namespace_name',
  jsx_closing_element = 'jsx_closing_element',
  jsx_self_closing_element = 'jsx_self_closing_element',
  jsx_attribute = 'jsx_attribute',
  class = 'class',
  class_declaration = 'class_declaration',
  class_heritage = 'class_heritage',
  function_expression = 'function_expression',
  function_declaration = 'function_declaration',
  generator_function = 'generator_function',
  generator_function_declaration = 'generator_function_declaration',
  arrow_function = 'arrow_function',
  call_expression = 'call_expression',
  new_expression = 'new_expression',
  await_expression = 'await_expression',
  member_expression = 'member_expression',
  subscript_expression = 'subscript_expression',
  assignment_expression = 'assignment_expression',
  augmented_assignment_expression = 'augmented_assignment_expression',
  spread_element = 'spread_element',
  ternary_expression = 'ternary_expression',
  binary_expression = 'binary_expression',
  unary_expression = 'unary_expression',
  update_expression = 'update_expression',
  sequence_expression = 'sequence_expression',
  string = 'string',
  template_string = 'template_string',
  template_substitution = 'template_substitution',
  regex = 'regex',
  meta_property = 'meta_property',
  arguments = 'arguments',
  decorator = 'decorator',
  class_body = 'class_body',
  field_definition = 'field_definition',
  formal_parameters = 'formal_parameters',
  class_static_block = 'class_static_block',
  rest_pattern = 'rest_pattern',
  method_definition = 'method_definition',
  pair = 'pair',
  pair_pattern = 'pair_pattern',
  computed_property_name = 'computed_property_name',
  property_identifier = 'property_identifier',
  shorthand_property_identifier = 'shorthand_property_identifier',
  shorthand_property_identifier_pattern = 'shorthand_property_identifier_pattern',
  statement_identifier = 'statement_identifier',
}
