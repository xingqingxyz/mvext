export const enum java {
  'identifier' = 1,
  'decimal_integer_literal' = 2,
  'hex_integer_literal' = 3,
  'octal_integer_literal' = 4,
  'binary_integer_literal' = 5,
  'decimal_floating_point_literal' = 6,
  'hex_floating_point_literal' = 7,
  'true' = 8,
  'false' = 9,
  'character_literal' = 10,
  '"' = 11,
  '"""' = 12,
  'string_fragment' = 13,
  '\\{' = 16,
  '}' = 17,
  'escape_sequence' = 19,
  'null_literal' = 20,
  '(' = 21,
  ')' = 22,
  '&' = 23,
  '=' = 24,
  '+=' = 25,
  '-=' = 26,
  '*=' = 27,
  '/=' = 28,
  '&=' = 29,
  '|=' = 30,
  '^=' = 31,
  '%=' = 32,
  '<<=' = 33,
  '>>=' = 34,
  '>>>=' = 35,
  '>' = 36,
  '<' = 37,
  '>=' = 38,
  '<=' = 39,
  '==' = 40,
  '!=' = 41,
  '&&' = 42,
  '||' = 43,
  '+' = 44,
  '-' = 45,
  '*' = 46,
  '/' = 47,
  '|' = 48,
  '^' = 49,
  '%' = 50,
  '<<' = 51,
  '>>' = 52,
  '>>>' = 53,
  'instanceof' = 54,
  'final' = 55,
  '->' = 56,
  ',' = 57,
  '?' = 58,
  ':' = 59,
  '!' = 60,
  '~' = 61,
  '++' = 62,
  '--' = 63,
  'new' = 64,
  '[' = 65,
  ']' = 66,
  '.' = 67,
  'class' = 68,
  '::' = 69,
  'extends' = 70,
  'switch' = 71,
  '{' = 72,
  'case' = 73,
  'default' = 74,
  'underscore_pattern' = 75,
  'when' = 76,
  ';' = 77,
  'assert' = 78,
  'do' = 79,
  'while' = 80,
  'break' = 81,
  'continue' = 82,
  'return' = 83,
  'yield' = 84,
  'synchronized' = 85,
  'throw' = 86,
  'try' = 87,
  'catch' = 88,
  'finally' = 89,
  'if' = 90,
  'else' = 91,
  'for' = 92,
  '@' = 93,
  'open' = 94,
  'module' = 95,
  'requires' = 96,
  'transitive' = 97,
  'static' = 98,
  'exports' = 99,
  'to' = 100,
  'opens' = 101,
  'uses' = 102,
  'provides' = 103,
  'with' = 104,
  'package' = 105,
  'import' = 106,
  'enum' = 107,
  'public' = 108,
  'protected' = 109,
  'private' = 110,
  'abstract' = 111,
  'strictfp' = 112,
  'native' = 113,
  'transient' = 114,
  'volatile' = 115,
  'sealed' = 116,
  'non-sealed' = 117,
  'implements' = 118,
  'record' = 120,
  '@interface' = 121,
  'interface' = 122,
  'byte' = 123,
  'short' = 124,
  'int' = 125,
  'long' = 126,
  'char' = 127,
  'float' = 128,
  'double' = 129,
  'boolean_type' = 130,
  'void_type' = 131,
  '...' = 132,
  'this' = 134,
  'super' = 135,
  'line_comment' = 136,
  'block_comment' = 137,
  'program' = 138,
  'string_literal' = 141,
  'multiline_string_fragment' = 144,
  'string_interpolation' = 145,
  'cast_expression' = 148,
  'assignment_expression' = 149,
  'binary_expression' = 150,
  'instanceof_expression' = 151,
  'lambda_expression' = 152,
  'inferred_parameters' = 153,
  'ternary_expression' = 154,
  'unary_expression' = 155,
  'update_expression' = 156,
  'array_creation_expression' = 158,
  'dimensions_expr' = 159,
  'parenthesized_expression' = 160,
  'class_literal' = 161,
  'object_creation_expression' = 162,
  'field_access' = 164,
  'template_expression' = 165,
  'array_access' = 166,
  'method_invocation' = 167,
  'argument_list' = 168,
  'method_reference' = 169,
  'type_arguments' = 170,
  'wildcard' = 171,
  'dimensions' = 173,
  'switch_expression' = 174,
  'switch_block' = 175,
  'switch_block_statement_group' = 176,
  'switch_rule' = 177,
  'switch_label' = 178,
  'pattern' = 179,
  'type_pattern' = 180,
  'record_pattern' = 181,
  'record_pattern_body' = 182,
  'record_pattern_component' = 183,
  'guard' = 184,
  'block' = 186,
  'expression_statement' = 187,
  'labeled_statement' = 188,
  'assert_statement' = 189,
  'do_statement' = 190,
  'break_statement' = 191,
  'continue_statement' = 192,
  'return_statement' = 193,
  'yield_statement' = 194,
  'synchronized_statement' = 195,
  'throw_statement' = 196,
  'try_statement' = 197,
  'catch_clause' = 198,
  'catch_formal_parameter' = 199,
  'catch_type' = 200,
  'finally_clause' = 201,
  'try_with_resources_statement' = 202,
  'resource_specification' = 203,
  'resource' = 204,
  'if_statement' = 205,
  'while_statement' = 206,
  'for_statement' = 207,
  'enhanced_for_statement' = 208,
  'marker_annotation' = 210,
  'annotation' = 211,
  'annotation_argument_list' = 212,
  'element_value_pair' = 213,
  'element_value_array_initializer' = 215,
  'module_declaration' = 217,
  'module_body' = 218,
  'requires_module_directive' = 220,
  'requires_modifier' = 221,
  'exports_module_directive' = 222,
  'opens_module_directive' = 223,
  'uses_module_directive' = 224,
  'provides_module_directive' = 225,
  'package_declaration' = 226,
  'import_declaration' = 227,
  'asterisk' = 228,
  'enum_declaration' = 229,
  'enum_body' = 230,
  'enum_body_declarations' = 231,
  'enum_constant' = 232,
  'class_declaration' = 233,
  'modifiers' = 234,
  'type_parameters' = 235,
  'type_parameter' = 236,
  'type_bound' = 237,
  'superclass' = 238,
  'super_interfaces' = 239,
  'type_list' = 240,
  'permits' = 241,
  'class_body' = 242,
  'static_initializer' = 243,
  'constructor_declaration' = 244,
  'constructor_body' = 246,
  'explicit_constructor_invocation' = 247,
  'scoped_identifier' = 248,
  'field_declaration' = 249,
  'record_declaration' = 250,
  'annotation_type_declaration' = 251,
  'annotation_type_body' = 252,
  'annotation_type_element_declaration' = 253,
  'interface_declaration' = 255,
  'extends_interfaces' = 256,
  'interface_body' = 257,
  'constant_declaration' = 258,
  'variable_declarator' = 260,
  'array_initializer' = 262,
  'annotated_type' = 265,
  'scoped_type_identifier' = 266,
  'generic_type' = 267,
  'array_type' = 268,
  'integral_type' = 269,
  'floating_point_type' = 270,
  'formal_parameters' = 273,
  'formal_parameter' = 274,
  'receiver_parameter' = 275,
  'spread_parameter' = 276,
  'throws' = 277,
  'local_variable_declaration' = 278,
  'method_declaration' = 279,
  'compact_constructor_declaration' = 280,
  'type_identifier' = 320,
}
