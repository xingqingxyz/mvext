{
  "activationEvents": [
    "onStartupFinished"
  ],
  "author": "Ming Chen <cm.email@qq.com> (https://github.com/xingqingxyz)",
  "browser": "./dist/extension.cjs",
  "bugs": {
    "url": "https://github.com/xingqingxyz/mvext/issues"
  },
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": true
    },
    "virtualWorkspaces": true
  },
  "categories": [
    "Other",
    "Formatters",
    "Programming Languages"
  ],
  "contributes": {
    "commands": [
      {
        "category": "mvext",
        "command": "mvext.transformCaseDefault",
        "title": "Transform Case Default"
      },
      {
        "category": "mvext",
        "command": "mvext.transformCaseWithPicker",
        "title": "Transform Case with Picker"
      },
      {
        "category": "mvext",
        "command": "mvext.renameWithCase",
        "title": "Rename with Case"
      },
      {
        "category": "mvext",
        "command": "mvext.evalSelection",
        "title": "Eval Selection"
      },
      {
        "category": "mvext",
        "command": "mvext.terminalEvalSelection",
        "icon": "$(debug-line-by-line)",
        "title": "Terminal Eval Selection"
      },
      {
        "category": "mvext",
        "command": "mvext.terminalFilterSelection",
        "icon": "$(filter)",
        "title": "Terminal Filter Selection"
      },
      {
        "category": "mvext",
        "command": "mvext.terminalLaunch",
        "icon": "$(run)",
        "title": "Terminal Launch File"
      },
      {
        "category": "mvext",
        "command": "mvext.terminalLaunchArgs",
        "icon": "$(debug-alt)",
        "title": "Terminal Launch File with Arguments"
      },
      {
        "category": "mvext",
        "command": "mvext.hexColor.toggleLanguage",
        "title": "Toggle Hex Color Language"
      },
      {
        "category": "mvext",
        "command": "mvext.runCodeBlock",
        "title": "Run Markdown Code Block"
      },
      {
        "category": "mvext",
        "command": "mvext._copyCodeBlock",
        "title": "Copy Markdown Code Block"
      },
      {
        "category": "mvext",
        "command": "mvext.copyJsonPath",
        "title": "Copy JSON Path at Selection"
      },
      {
        "category": "mvext",
        "command": "mvext.invokeComplete",
        "shortTitle": "Invoke Special Complete",
        "title": "Invoke Complete (css,dict,line,path,user)"
      },
      {
        "category": "mvext",
        "command": "mvext.refreshComplete",
        "shortTitle": "Refresh Complete to Special Complete",
        "title": "Refresh Complete (css,dict,line,path,user)"
      },
      {
        "category": "mvext",
        "command": "mvext.tsTreeViewReveal",
        "title": "Reveal Selection in Tree-Sitter Tree View"
      },
      {
        "category": "mvext",
        "command": "mvext.tsTreeViewRefresh",
        "icon": "$(refresh)",
        "title": "Refresh Tree-Sitter Tree View"
      },
      {
        "category": "mvext",
        "command": "mvext.tsTreeViewOpen",
        "icon": "$(symbol-reference)",
        "title": "Open Tree-Sitter Tree View Document"
      },
      {
        "category": "mvext",
        "command": "mvext.tsTreeViewCopy",
        "icon": "$(copy)",
        "title": "Copy JavaScript Expression"
      },
      {
        "category": "mvext",
        "command": "mvext.pwsh.astTreeViewReveal",
        "title": "Reveal Selection in PowerShell Ast Tree View"
      },
      {
        "category": "mvext",
        "command": "mvext.pwsh.astTreeViewRefresh",
        "icon": "$(refresh)",
        "title": "Refresh PowerShell Ast Tree View"
      },
      {
        "category": "mvext",
        "command": "mvext.pwsh.astTreeViewOpen",
        "icon": "$(symbol-reference)",
        "title": "Open PowerShell Ast Tree View Document"
      },
      {
        "category": "mvext",
        "command": "mvext.pwsh.astTreeViewSend",
        "icon": "$(send)",
        "title": "Send the Node Expression to PSES Console"
      },
      {
        "category": "mvext",
        "command": "mvext.pwsh.astTreeViewCopy",
        "icon": "$(copy)",
        "title": "Copy PowerShell Expression"
      }
    ],
    "configuration": {
      "properties": {
        "mvext.evalSelection.languageMap": {
          "additionalProperties": {
            "type": "string"
          },
          "default": {
            "bat": "cmd /d /c",
            "javascript": "node -p",
            "javascriptreact": "tsx -p",
            "powershell": "pwsh -nop -c",
            "python": "python -c",
            "shellscript": "bash -c",
            "typescript": "tsx -p",
            "typescriptreact": "tsx -p"
          },
          "markdownDescription": "Map of language to excutable command for eval selections.",
          "type": "object"
        },
        "mvext.pathComplete.debounceTimeMs": {
          "default": 200,
          "markdownDescription": "Path completion debounce time to use while quickly typing the trigger char `\\/`.",
          "type": "integer"
        },
        "mvext.pathComplete.prefixMap": {
          "additionalProperties": {
            "type": "string"
          },
          "default": {
            "@/": "${workspaceFolder}/src/"
          },
          "markdownDescription": "Path mappings for path completion:\n- `${workspaceFolder}` is workspace folder\n- `~` is `os.homedir()`\n- `$VAR` is environment variable `VAR`",
          "scope": "resource",
          "type": "object"
        },
        "mvext.pwsh.astTreeView.enabled": {
          "default": true,
          "markdownDescription": "Enable PowerShell ast tree view.",
          "type": "boolean"
        },
        "mvext.pwsh.astTreeView.noProcessSize": {
          "default": 9000000,
          "markdownDescription": "When powershell document size `-gt` this, no process when refresh.",
          "type": "integer"
        },
        "mvext.shfmt.enabled": {
          "default": true,
          "markdownDescription": "Enable shfmt formatter for `shellscript`, requires reload.",
          "type": "boolean"
        },
        "mvext.shfmt.extraArgs": {
          "default": [
            "-bn",
            "-ci",
            "-sr"
          ],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Formatter shfmt's extra command line args.",
          "type": "array"
        },
        "mvext.shfmt.optionsOnWeb": {
          "default": {
            "binaryNextLine": true,
            "spaceRedirects": true,
            "switchCaseIndent": true
          },
          "markdownDescription": "The `ShOptions` passed to the `sh-syntax` wasm method `processor` on Web.",
          "type": "object"
        },
        "mvext.stylua.enabled": {
          "default": false,
          "markdownDescription": "Enable stylua formatter for `lua`, requires reload.",
          "type": "boolean"
        },
        "mvext.stylua.extraArgs": {
          "default": [],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Formatter stylua's extra command line args.",
          "type": "array"
        },
        "mvext.terminalLaunch.languageMap": {
          "additionalProperties": {
            "type": "string"
          },
          "default": {
            "bat": "cmd /d",
            "csharp": "dotnet run",
            "dart": "dart run",
            "fsharp": "dotnet run",
            "go": "go run",
            "javascript": "node",
            "powershell": "pwsh -nop",
            "python": "python",
            "shellscript": "bash",
            "typescript": "tsx"
          },
          "markdownDescription": "Languages launch command line definitions.",
          "type": "object"
        },
        "mvext.terminalRunCode.defaultLanguageId": {
          "default": "powershell",
          "enum": [
            "bat",
            "shellscript",
            "powershell",
            "python",
            "javascript",
            "typescript"
          ],
          "markdownDescription": "The default language fallback for command `mvext.terminalRunCode`.",
          "type": "string"
        },
        "mvext.transformCase.defaultCase": {
          "default": "camel",
          "enum": [
            "camel",
            "constant",
            "dot",
            "header",
            "kebab",
            "lower",
            "normal",
            "pascal",
            "path",
            "sentence",
            "snake",
            "title",
            "upper"
          ],
          "markdownDescription": "Command `mvext.transformCaseDefault` use this as transform to target case",
          "scope": "language-overridable",
          "type": "string"
        },
        "mvext.treeSitter.extraParserMap": {
          "additionalProperties": {
            "type": "string"
          },
          "default": {},
          "ignoreSync": true,
          "markdownDescription": "Extra parser paths used for language id, which overrides the bundled parsers.",
          "type": "object"
        },
        "mvext.treeSitter.syncedLanguages": {
          "default": [
            "css",
            "go",
            "javascript",
            "javascriptreact",
            "python",
            "typescript",
            "typescriptreact"
          ],
          "examples": [
            "cpp",
            "css",
            "go",
            "ini",
            "java",
            "javascript",
            "javascriptreact",
            "typescript",
            "typescriptreact",
            "python",
            "rust",
            "shellscript"
          ],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Tree-Sitter synced languages for code actions and completions.",
          "type": "array"
        },
        "mvext.treeSitter.treeView.enabled": {
          "default": true,
          "markdownDescription": "Enable tree-sitter tree view.",
          "type": "boolean"
        }
      },
      "title": "Make VSCode Extension"
    },
    "keybindings": [
      {
        "command": "mvext.transformCaseDefault",
        "key": "alt+x d",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "mvext.transformCaseWithPicker",
        "key": "alt+x t",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "mvext.renameWithCase",
        "key": "alt+x r",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "mvext.evalSelection",
        "key": "ctrl+alt+e",
        "when": "editorTextFocus && !editorReadonly && !inDebugMode"
      },
      {
        "command": "mvext.terminalEvalSelection",
        "key": "alt+e",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "mvext.terminalFilterSelection",
        "key": "alt+t",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "args": "css",
        "command": "mvext.invokeComplete",
        "key": "alt+c ctrl+space",
        "when": "editorTextFocus"
      },
      {
        "args": "dict",
        "command": "mvext.invokeComplete",
        "key": "alt+d ctrl+space",
        "when": "editorTextFocus"
      },
      {
        "args": "line",
        "command": "mvext.invokeComplete",
        "key": "alt+l ctrl+space",
        "when": "editorTextFocus"
      },
      {
        "args": "path",
        "command": "mvext.invokeComplete",
        "key": "alt+p ctrl+space",
        "when": "editorTextFocus"
      },
      {
        "args": "user",
        "command": "mvext.invokeComplete",
        "key": "alt+u ctrl+space",
        "when": "editorTextFocus"
      },
      {
        "args": "css",
        "command": "mvext.refreshComplete",
        "key": "alt+c",
        "when": "editorTextFocus && suggestWidgetVisible"
      },
      {
        "args": "dict",
        "command": "mvext.refreshComplete",
        "key": "alt+d",
        "when": "editorTextFocus && suggestWidgetVisible"
      },
      {
        "args": "line",
        "command": "mvext.refreshComplete",
        "key": "alt+l",
        "when": "editorTextFocus && suggestWidgetVisible"
      },
      {
        "args": "path",
        "command": "mvext.refreshComplete",
        "key": "alt+p",
        "when": "editorTextFocus && suggestWidgetVisible"
      },
      {
        "args": "user",
        "command": "mvext.refreshComplete",
        "key": "alt+u",
        "when": "editorTextFocus && suggestWidgetVisible"
      }
    ],
    "languages": [
      {
        "aliases": [
          "Regex"
        ],
        "extensions": [
          ".regex"
        ],
        "id": "regex"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "mvext.tsTreeViewReveal",
          "when": "editorLangId in mvext.tsSyncedLanguages"
        },
        {
          "command": "mvext.pwsh.astTreeViewReveal",
          "when": "editorLangId == powershell"
        }
      ],
      "editor/title/run": [
        {
          "alt": "mvext.terminalLaunchArgs",
          "command": "mvext.terminalLaunch",
          "when": "editorLangId != powershell && editorLangId in mvext.terminalLaunchLanguages"
        }
      ],
      "explorer/context": [
        {
          "command": "mvext.terminalLaunch",
          "when": "!listMultiSelection && resourceLangId in mvext.terminalLaunchLanguages"
        },
        {
          "command": "mvext.terminalLaunchArgs",
          "when": "!listMultiSelection && resourceLangId in mvext.terminalLaunchLanguages"
        }
      ],
      "view/item/context": [
        {
          "command": "mvext.tsTreeViewCopy",
          "group": "inline",
          "when": "view == mvext.tsTreeView"
        },
        {
          "alt": "mvext.pwsh.astTreeViewCopy",
          "command": "mvext.pwsh.astTreeViewSend",
          "group": "inline",
          "when": "view == mvext.pwsh.astTreeView"
        }
      ],
      "view/title": [
        {
          "alt": "mvext.tsTreeViewOpen",
          "command": "mvext.tsTreeViewRefresh",
          "group": "navigation",
          "when": "view == mvext.tsTreeView"
        },
        {
          "alt": "mvext.pwsh.astTreeViewOpen",
          "command": "mvext.pwsh.astTreeViewRefresh",
          "group": "navigation",
          "when": "view == mvext.pwsh.astTreeView"
        }
      ]
    },
    "problemMatchers": [
      {
        "applyTo": "closedDocuments",
        "fileLocation": "relative",
        "label": "esbuild problem matcher",
        "name": "esbuild",
        "pattern": [
          {
            "message": 2,
            "regexp": "^[✘▲] \\[([A-Z]+)\\] (.+)$",
            "severity": 1
          },
          {
            "column": 3,
            "file": 1,
            "line": 2,
            "regexp": "^ {4}(?!\\s)([^:]+):([0-9]+):([0-9]+):$"
          }
        ],
        "source": "esbuild"
      },
      {
        "applyTo": "closedDocuments",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "^\\[watch\\] build started"
          },
          "endsPattern": {
            "regexp": "^\\[watch\\] build finished"
          }
        },
        "base": "$esbuild",
        "fileLocation": "relative",
        "label": "esbuild watch problem matcher",
        "name": "esbuild-watch",
        "source": "esbuild"
      },
      {
        "applyTo": "allDocuments",
        "fileLocation": "relative",
        "label": "Rollup problem matcher",
        "name": "rollup",
        "pattern": {
          "message": 1,
          "regexp": "^\\[!\\] (.+)$"
        },
        "severity": "error",
        "source": "rollup"
      },
      {
        "applyTo": "allDocuments",
        "background": {
          "beginsPattern": {
            "regexp": "^bundles .*? → .*\\.{3}$"
          },
          "endsPattern": {
            "regexp": "^\\[\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\] waiting for changes\\.{3}$"
          }
        },
        "base": "$rollup",
        "fileLocation": "relative",
        "label": "Rollup watch problem matcher",
        "name": "rollup-watch",
        "source": "rollup"
      }
    ],
    "views": {
      "explorer": [
        {
          "contextualTitle": "Tree-Sitter Tree View",
          "icon": "$(list-tree)",
          "id": "mvext.tsTreeView",
          "name": "Tree-Sitter Tree View",
          "visibility": "hidden",
          "when": "config.mvext.treeSitter.treeView.enabled"
        },
        {
          "contextualTitle": "PowerShell Ast Tree View",
          "icon": "$(terminal-powershell)",
          "id": "mvext.pwsh.astTreeView",
          "name": "PowerShell Ast Tree View",
          "visibility": "hidden",
          "when": "!isWeb && config.mvext.pwsh.astTreeView.enabled"
        }
      ]
    },
    "viewsWelcome": [
      {
        "contents": "This document language is not synced.\n[Open Settings](command:workbench.action.openSettings)",
        "view": "mvext.tsTreeView"
      },
      {
        "contents": "Please try to edit powershell scripts, then refresh to visit ast.",
        "view": "mvext.pwsh.astTreeView"
      }
    ]
  },
  "description": "Make extension of completers, ast viewers, code launchers...",
  "devDependencies": {
    "@eslint/js": "^9.37.0",
    "@johnnymorganz/stylua": "^2.3.0",
    "@rollup/plugin-alias": "^5.1.1",
    "@rollup/plugin-commonjs": "^28.0.7",
    "@rollup/plugin-node-resolve": "^16.0.3",
    "@rollup/plugin-replace": "^6.0.2",
    "@rollup/plugin-terser": "^0.4.4",
    "@rollup/plugin-typescript": "^12.1.4",
    "@swc-node/register": "^1.11.1",
    "@types/emscripten": "^1.41.2",
    "@types/mocha": "^10.0.10",
    "@types/node": "^22.18.10",
    "@types/vscode": "^1.105.0",
    "@types/which": "^3.0.4",
    "@vscode/tree-sitter-wasm": "^0.1.5",
    "eslint": "^9.37.0",
    "jsonc-parser": "^3.3.1",
    "lint-staged": "^16.2.4",
    "mocha": "^11.7.4",
    "os-browserify": "^0.3.0",
    "path-browserify": "^1.0.1",
    "prettier": "^3.6.2",
    "process": "^0.11.10",
    "rollup": "^4.52.4",
    "sh-syntax": "^0.5.8",
    "simple-git-hooks": "^2.13.1",
    "strip-ansi": "^7.1.2",
    "tree-sitter-bash": "^0.25.0",
    "tslib": "^2.8.1",
    "typescript": "^5.9.3",
    "typescript-eslint": "^8.46.1",
    "web-tree-sitter": "^0.25.10",
    "which": "^5.0.0"
  },
  "displayName": "Make VSCode Extension",
  "engines": {
    "vscode": "^1.105.0"
  },
  "extensionKind": [
    "ui",
    "workspace"
  ],
  "keywords": [
    "ast",
    "tree-sitter",
    "refactor",
    "markdown",
    "powershell"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.{js,ts,json,md}": "prettier -w --cache",
    "*.{js,ts}": "eslint --fix --cache"
  },
  "main": "./dist/extension.js",
  "mocha": {
    "extension": "ts",
    "require": "@swc-node/register/esm-register",
    "spec": "src/test/unit/**/*.test.ts",
    "watch-files": "src/**"
  },
  "name": "mvext",
  "packageManager": "pnpm@10.18.2",
  "prettier": {
    "semi": false,
    "singleQuote": true
  },
  "private": true,
  "publisher": "xingqingxyz",
  "repository": {
    "type": "git",
    "url": "https://github.com/xingqingxyz/mvext"
  },
  "scripts": {
    "install-extension": "vsce pack -o mvext.vsix && code --install-extension mvext.vsix",
    "lint": "tsc --noEmit && eslint --fix --cache src",
    "postinstall": "node ./scripts/postinstall.ts",
    "test": "mocha",
    "vscode:prepublish": "dotnet build -c Release && rollup -c --environment NODE_ENV:production,PLATFORM:all",
    "watch": "rollup -c -w",
    "watch-web": "rollup -c -w --environment PLATFORM:web"
  },
  "simple-git-hooks": {
    "pre-commit": "pnpm exec lint-staged && pnpm test"
  },
  "type": "module",
  "version": "0.22.0"
}
