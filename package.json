{
  "activationEvents": [
    "onStartupFinished"
  ],
  "author": "Ming Chen",
  "bugs": {
    "url": "https://github.com/xingqingxyz/mvext/issues"
  },
  "categories": [
    "Other",
    "Formatters",
    "Programming Languages"
  ],
  "contributes": {
    "commands": [
      {
        "category": "mvext",
        "command": "mvext.transformCaseDefault",
        "title": "Transform Case Default"
      },
      {
        "category": "mvext",
        "command": "mvext.transformCaseWithPicker",
        "title": "Transform Case with Picker"
      },
      {
        "category": "mvext",
        "command": "mvext.renameWithCase",
        "title": "Rename with Case"
      },
      {
        "category": "mvext",
        "command": "mvext.evalSelection",
        "title": "Eval Selection"
      },
      {
        "category": "mvext",
        "command": "mvext.terminalEvalSelection",
        "icon": "$(debug-line-by-line)",
        "title": "Terminal Eval Selection"
      },
      {
        "category": "mvext",
        "command": "mvext.terminalFilterSelection",
        "icon": "$(filter)",
        "title": "Terminal Filter Selection"
      },
      {
        "category": "mvext",
        "command": "mvext.terminalRunSelection",
        "title": "Terminal Run Selection"
      },
      {
        "category": "mvext",
        "command": "mvext.terminalLaunch",
        "icon": "$(run)",
        "title": "Terminal Launch File"
      },
      {
        "category": "mvext",
        "command": "mvext.terminalLaunchArgs",
        "icon": "$(debug-alt)",
        "title": "Terminal Launch File with Arguments"
      },
      {
        "category": "mvext",
        "command": "mvext.hexColor.toggleLanguage",
        "title": "Toggle Hex Color Language"
      },
      {
        "category": "mvext",
        "command": "mvext.runCodeBlock",
        "title": "Run Markdown Code Block"
      },
      {
        "category": "mvext",
        "command": "mvext._copyCodeBlock",
        "title": "Copy Markdown Code Block"
      }
    ],
    "configuration": {
      "properties": {
        "mvext.dictionaryComplete.enabled": {
          "default": true,
          "markdownDescription": "Enable dictionary completion",
          "scope": "resource",
          "type": "boolean"
        },
        "mvext.evalSelection.languages": {
          "additionalProperties": {
            "description": "Language Id : Eval Config",
            "type": "string"
          },
          "default": {
            "bat": "cmd /d /c",
            "javascript": "node -p",
            "javascriptreact": "bun x tsx -p",
            "powershell": "pwsh -nop -c",
            "python": "uv run python -c",
            "shellscript": "bash -c",
            "typescript": "bun x tsx -p",
            "typescriptreact": "bun x tsx -p"
          }
        },
        "mvext.pathComplete.debounceTimeMs": {
          "default": 200,
          "markdownDescription": "Path completion debounceTimeMs",
          "scope": "resource",
          "type": "integer"
        },
        "mvext.pathComplete.prefixMap": {
          "additionalProperties": {
            "type": "string"
          },
          "default": {},
          "examples": {
            "@": "${workspaceFolder}/src"
          },
          "markdownDescription": "Path mappings for path completion:\n- `${workspaceFolder}` means workspace folder\n- `~` means `os.homedir()`\n- use $VAR to substitute to environment variables",
          "scope": "resource",
          "type": "object"
        },
        "mvext.terminalRunCode.defaultLanguageId": {
          "default": "powershell",
          "markdownDescription": "Command `mvext.terminalRunCode` use this when command timeout.",
          "type": "string",
          "enum": [
            "bat",
            "shellscript",
            "powershell",
            "python",
            "javascript",
            "typescript"
          ]
        },
        "mvext.shfmt.extraArgs": {
          "default": [
            "-bn",
            "-ci",
            "-sr"
          ],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Formatter shfmt's extra command line args",
          "type": "array"
        },
        "mvext.stylua.extraArgs": {
          "default": [],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Formatter stylua's extra command line args",
          "type": "array"
        },
        "mvext.terminalLaunch.languages": {
          "additionalProperties": {
            "description": "Language Id : Launch Config",
            "type": "string"
          },
          "default": {
            "bat": "cmd /d",
            "csharp": "dotnet run",
            "dart": "dart run",
            "fsharp": "dotnet run",
            "go": "go run",
            "javascript": "node",
            "javascriptreact": "bun x tsx",
            "powershell": "&",
            "python": "uv run python",
            "shellscript": "bash",
            "typescript": "bun x tsx",
            "typescriptreact": "bun x tsx"
          },
          "markdownDescription": "Languages launch config definitions",
          "type": "object"
        },
        "mvext.transformCase.defaultCase": {
          "default": "camel",
          "enum": [
            "camel",
            "constant",
            "dot",
            "header",
            "kebab",
            "lower",
            "normal",
            "pascal",
            "path",
            "sentence",
            "snake",
            "title",
            "upper"
          ],
          "markdownDescription": "Command `mvext.transformCaseDefault` use this as transform to target case",
          "scope": "language-overridable",
          "type": "string"
        }
      },
      "title": "mvext"
    },
    "keybindings": [
      {
        "command": "mvext.transformCaseDefault",
        "key": "alt+x d",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "mvext.transformCaseWithPicker",
        "key": "alt+x t",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "mvext.renameWithCase",
        "key": "alt+x r",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "mvext.evalSelection",
        "key": "ctrl+alt+e",
        "when": "editorTextFocus && !editorReadonly && !inDebugMode"
      },
      {
        "command": "mvext.terminalEvalSelection",
        "key": "alt+e",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "mvext.terminalFilterSelection",
        "key": "alt+t",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "mvext.terminalRunSelection",
        "key": "f8",
        "when": "editorTextFocus && editorLangId != 'powershell'"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "alt": "mvext.terminalEvalSelection",
          "command": "mvext.terminalFilterSelection",
          "group": "navigation",
          "when": "!editorReadonly"
        }
      ],
      "editor/title/run": [
        {
          "alt": "mvext.terminalLaunchArgs",
          "command": "mvext.terminalLaunch",
          "when": "editorLangId in mvext.terminalLaunch.languages"
        }
      ],
      "explorer/context": [
        {
          "command": "mvext.terminalLaunch",
          "when": "!listMultiSelection && resourceLangId in mvext.terminalLaunch.languages"
        },
        {
          "command": "mvext.terminalLaunchArgs",
          "when": "!listMultiSelection && resourceLangId in mvext.terminalLaunch.languages"
        }
      ]
    },
    "problemMatchers": [
      {
        "applyTo": "closedDocuments",
        "fileLocation": "relative",
        "label": "esbuild problem matcher",
        "name": "esbuild",
        "pattern": [
          {
            "message": 2,
            "regexp": "^[✘▲] \\[([A-Z]+)\\] (.+)$",
            "severity": 1
          },
          {
            "column": 3,
            "file": 1,
            "line": 2,
            "regexp": "^ {4}(?!\\s)([^:]+):([0-9]+):([0-9]+):$"
          }
        ],
        "source": "esbuild"
      },
      {
        "applyTo": "closedDocuments",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "^\\[watch\\] build started"
          },
          "endsPattern": {
            "regexp": "^\\[watch\\] build finished"
          }
        },
        "base": "$esbuild",
        "fileLocation": "relative",
        "label": "esbuild watch problem matcher",
        "name": "esbuild-watch",
        "source": "esbuild"
      },
      {
        "applyTo": "allDocuments",
        "fileLocation": "relative",
        "label": "Rollup problem matcher",
        "name": "rollup",
        "pattern": {
          "column": 3,
          "file": 1,
          "line": 2,
          "message": 4,
          "regexp": "^\\(!\\) (?:\\[plugin [^\\]]+\\]|RollupError:) (\\S+) \\((\\d+):(\\d+)\\): (.*)$"
        },
        "source": "rollup"
      },
      {
        "applyTo": "allDocuments",
        "background": {
          "beginsPattern": {
            "regexp": "^bundles .*? → .*\\.{3}$"
          },
          "endsPattern": {
            "regexp": "^\\[\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\] waiting for changes\\.{3}$"
          }
        },
        "base": "$rollup",
        "fileLocation": "relative",
        "label": "Rollup watch problem matcher",
        "name": "rollup-watch",
        "source": "rollup"
      }
    ]
  },
  "dependencies": {
    "strip-ansi": "^7.1.0"
  },
  "description": "Eval selections as code, launch file in terminal and auto complete path.",
  "devDependencies": {
    "@eslint/js": "^9.30.0",
    "@rollup/plugin-commonjs": "^28.0.6",
    "@rollup/plugin-node-resolve": "^16.0.1",
    "@rollup/plugin-replace": "^6.0.2",
    "@rollup/plugin-terser": "^0.4.4",
    "@rollup/plugin-typescript": "^12.1.4",
    "@swc-node/register": "^1.10.10",
    "@types/mocha": "^10.0.10",
    "@types/node": "^22.15.34",
    "@types/vscode": "^1.101.0",
    "eslint": "^9.30.0",
    "lint-staged": "^16.1.2",
    "mocha": "^11.7.1",
    "prettier": "^3.6.2",
    "rollup": "^4.44.1",
    "simple-git-hooks": "^2.13.0",
    "tslib": "^2.8.1",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.35.0"
  },
  "displayName": "Eval Launch Completion",
  "engines": {
    "vscode": "^1.101.0"
  },
  "license": "MIT",
  "lint-staged": {
    "*.{js,ts,json,md}": "prettier -w",
    "*.{js,ts}": "eslint --fix --cache"
  },
  "main": "./out/extension.js",
  "name": "mvext",
  "prettier": {
    "semi": false,
    "singleQuote": true
  },
  "private": true,
  "publisher": "xingqingxyz",
  "repository": {
    "type": "git",
    "url": "https://github.com/xingqingxyz/mvext"
  },
  "scripts": {
    "ext-install": "vsce pack -o out/mvext.vsix && code --install-extension out/mvext.vsix",
    "lint": "eslint --fix --cache src",
    "test": "mocha -r @swc-node/register --extension ts src/test/**/*.ts",
    "vscode:prepublish": "rollup -c --environment NODE_ENV:production",
    "watch": "rollup -c -w"
  },
  "simple-git-hooks": {
    "pre-commit": "npx lint-staged"
  },
  "type": "module",
  "version": "0.15.3"
}
