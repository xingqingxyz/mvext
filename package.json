{
  "name": "mvext",
  "displayName": "My VSCode Extension",
  "description": "A extension which ships a set of pragmatic web dev features.",
  "version": "0.1.2",
  "l10n": "./l10n",
  "engines": {
    "vscode": "^1.81.1"
  },
  "categories": [
    "Programming Languages",
    "Keymaps",
    "Other"
  ],
  "author": {
    "email": "cm.email@qq.com",
    "name": "Ming.Chen.",
    "url": "https://github.com/xingqingxyz"
  },
  "repository": {
    "url": "https://github.com/xingqingxyz/mvext.git",
    "type": "git"
  },
  "bugs": {
    "url": "https://github.com/xingqingxyz/mvext/issues"
  },
  "main": "./out/extension.js",
  "keywords": [
    "case transform",
    "quick switch",
    "eval",
    "typescript"
  ],
  "contributes": {
    "configuration": {
      "title": "My VSCode Extension",
      "properties": {
        "mvext.evalWithSelection.bashExecutable": {
          "type": "string",
          "markdownDescription": "%config.bashExecutable%"
        },
        "mvext.evalWithSelection.useDeno": {
          "type": "boolean",
          "markdownDescription": "%config.useDeno%"
        }
      }
    },
    "commands": [
      {
        "title": "mvext: Transform Case: Title",
        "command": "mvext.transformToTitleCase"
      },
      {
        "title": "mvext: Transform Case: Camel",
        "command": "mvext.transformToCamelCase"
      },
      {
        "title": "mvext: Transform Case: Constant",
        "command": "mvext.transformToConstantCase"
      },
      {
        "title": "mvext: Transform Case: Pascal",
        "command": "mvext.transformToPascalCase"
      },
      {
        "title": "mvext: Transform Case: Kebab",
        "command": "mvext.transformToKebabCase"
      },
      {
        "title": "mvext: Transform Case: Snake",
        "command": "mvext.transformToSnakeCase"
      },
      {
        "title": "mvext: Transform Case: Dot",
        "command": "mvext.transformToDotCase"
      },
      {
        "title": "mvext: Transform Case: Path",
        "command": "mvext.transformToPathCase"
      },
      {
        "title": "mvext: Transform Case: Sentence",
        "command": "mvext.transformToSentenceCase"
      },
      {
        "title": "mvext: Transform Case: No",
        "command": "mvext.transformToNoCase"
      },
      {
        "title": "mvext: Transform Case: Header",
        "command": "mvext.transformToHeaderCase"
      },
      {
        "title": "mvext: Transform Case: Lower",
        "command": "mvext.transformToLowerCase"
      },
      {
        "title": "mvext: Transform Case: Upper",
        "command": "mvext.transformToUpperCase"
      },
      {
        "title": "mvext: Detect Transform Case",
        "command": "mvext.detectTransformCase"
      },
      {
        "title": "mvext: Eval With Selection",
        "command": "mvext.evalWithSelection"
      },
      {
        "title": "mvext: Switch File: HTML<->JS/CSS JS<->TS",
        "command": "mvext.switchFile"
      }
    ],
    "keybindings": [
      {
        "when": "editorTextFocus && !editorReadonly",
        "key": "alt+x t",
        "command": "mvext.transformToTitleCase"
      },
      {
        "when": "editorTextFocus && !editorReadonly",
        "key": "alt+x c",
        "command": "mvext.transformToCamelCase"
      },
      {
        "key": "alt+x shift+c",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToConstantCase"
      },
      {
        "key": "alt+x p",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToPascalCase"
      },
      {
        "key": "alt+x k",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToKebabCase"
      },
      {
        "key": "alt+x s",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToSnakeCase"
      },
      {
        "key": "alt+x .",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToDotCase"
      },
      {
        "key": "alt+x /",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToPathCase"
      },
      {
        "key": "alt+x space",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToSentenceCase"
      },
      {
        "key": "alt+x n",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToNoCase"
      },
      {
        "key": "alt+x h",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToHeaderCase"
      },
      {
        "key": "alt+x u",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToUpperCase"
      },
      {
        "key": "alt+x l",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToLowerCase"
      },
      {
        "key": "alt+x alt+d",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.detectTransformCase"
      },
      {
        "key": "ctrl+alt+e",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.evalWithSelection"
      },
      {
        "key": "alt+o",
        "when": "editorTextFocus && editorLangId =~ /html|css|javascript|typescript/",
        "command": "mvext.switchFile"
      }
    ],
    "problemMatchers": [
      {
        "name": "esbuild",
        "label": "esbuild problem matcher",
        "source": "esbuild",
        "owner": "esbuild",
        "severity": "error",
        "applyTo": "closedDocuments",
        "fileLocation": "relative",
        "pattern": [
          {
            "regexp": "^✘ [(ERROR)] (?<msg>.*)$",
            "severity": 0,
            "message": 1
          },
          {
            "regexp": "^\\s+(.*?):(\\d+):(\\d+):",
            "file": 0,
            "line": 1,
            "column": 2
          },
          {
            "regexp": "^\\s+\\d+ │(.*)$",
            "code": 0
          }
        ]
      },
      {
        "name": "esbuild-watch",
        "base": "$esbuild",
        "source": "esbuild",
        "owner": "esbuild",
        "label": "esbuild watch problem matcher",
        "severity": "error",
        "applyTo": "closedDocuments",
        "fileLocation": "relative",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "\\[watch\\] build started"
          },
          "endsPattern": {
            "regexp": "\\[watch\\] build finished, watching for changes..."
          }
        }
      }
    ]
  },
  "scripts": {
    "dev": "node ./scripts/build.js",
    "test": "node ./out/test/runTest.js",
    "test:local": "cross-env LOCAL_TEST=true node ./out/test/runTest.js",
    "eslint": "eslint src --ext ts --fix --cache",
    "prettier": "prettier -w . --cache",
    "stage": "cross-env NODE_ENV=stage yarn eslint && tsc --noEmit && yarn prettier && pwsh install.ps1",
    "prepare": "husky install",
    "vscode:prepublish": "cross-env NODE_ENV=stage node ./scripts/build.js"
  },
  "devDependencies": {
    "@types/glob": "8.1.0",
    "@types/mocha": "10.0.1",
    "@types/node": "^16.18.41",
    "@types/vscode": "1.81.0",
    "@typescript-eslint/eslint-plugin": "^6.4.0",
    "@typescript-eslint/parser": "^6.4.0",
    "@vscode/test-electron": "2.3.4",
    "esbuild": "0.19.2",
    "eslint": "8.45.0",
    "glob": "10.3.3",
    "husky": "^8.0.3",
    "iconv-lite": "^0.6.3",
    "lint-staged": "^14.0.0",
    "mocha": "10.2.0"
  },
  "prettier": {
    "semi": false,
    "singleQuote": true,
    "bracketSameLine": true
  },
  "lint-staged": [
    "yarn stage"
  ]
}
