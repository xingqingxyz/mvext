{
  "name": "mvext",
  "description": "An extension ships some useful tools.",
  "version": "0.6.8",
  "author": "Ming Chen",
  "displayName": "mvext",
  "publisher": "xingqingxyz",
  "private": true,
  "preview": true,
  "license": "MIT",
  "engines": {
    "vscode": "^1.82.0"
  },
  "categories": [
    "Other",
    "Programming Languages"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/xingqingxyz/mvext"
  },
  "bugs": {
    "url": "https://github.com/xingqingxyz/mvext/issues"
  },
  "main": "./out/extension",
  "contributes": {
    "configuration": {
      "title": "VSC mvext",
      "properties": {
        "mvext.applyShellEdit.pwshExec": {
          "type": "string",
          "default": "pwsh",
          "markdownDescription": "`pwsh` executable file path"
        },
        "mvext.applyShellEdit.useExternalNode": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Use external node to eval js/ts files"
        },
        "mvext.applyShellEdit.nodeCommandLine": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "node",
            "-e"
          ],
          "markdownDescription": "Child process command and args when #mvext.applyShellEdit.useExternalNode# turned on"
        },
        "mvext.pathComplete.expandPaths": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "default": {},
          "examples": {
            "": [
              "${workspaceFolder}",
              "${workspaceFolder}/public"
            ]
          },
          "markdownDescription": "Path mappings prefixes(Use array to map one to many):\n- `${workspaceFolder}` substitutes to main workspace folder\n- `~` substitutes to `os.homedir()` with ease"
        }
      }
    },
    "commands": [
      {
        "title": "Title",
        "category": "Transform Case",
        "command": "mvext.transformToTitleCase"
      },
      {
        "title": "Camel",
        "category": "Transform Case",
        "command": "mvext.transformToCamelCase"
      },
      {
        "title": "Constant",
        "category": "Transform Case",
        "command": "mvext.transformToConstantCase"
      },
      {
        "title": "Pascal",
        "category": "Transform Case",
        "command": "mvext.transformToPascalCase"
      },
      {
        "title": "Kebab",
        "category": "Transform Case",
        "command": "mvext.transformToKebabCase"
      },
      {
        "title": "Snake",
        "category": "Transform Case",
        "command": "mvext.transformToSnakeCase"
      },
      {
        "title": "Dot",
        "category": "Transform Case",
        "command": "mvext.transformToDotCase"
      },
      {
        "title": "Path",
        "category": "Transform Case",
        "command": "mvext.transformToPathCase"
      },
      {
        "title": "Sentence",
        "category": "Transform Case",
        "command": "mvext.transformToSentenceCase"
      },
      {
        "title": "No",
        "category": "Transform Case",
        "command": "mvext.transformToNoCase"
      },
      {
        "title": "Header",
        "category": "Transform Case",
        "command": "mvext.transformToHeaderCase"
      },
      {
        "title": "Lower",
        "category": "Transform Case",
        "command": "mvext.transformToLowerCase"
      },
      {
        "title": "Upper",
        "category": "Transform Case",
        "command": "mvext.transformToUpperCase"
      },
      {
        "title": "Apply Shell Edit",
        "category": "mvext",
        "command": "mvext.applyShellEdit"
      },
      {
        "title": "Apply Current Shell Edit",
        "category": "mvext",
        "command": "mvext.applyCurrentShellEdit"
      },
      {
        "title": "Quickly Switch File",
        "category": "mvext",
        "command": "mvext.quicklySwitchFile"
      }
    ],
    "keybindings": [
      {
        "when": "editorTextFocus && !editorReadonly",
        "key": "alt+x t",
        "command": "mvext.transformToTitleCase"
      },
      {
        "when": "editorTextFocus && !editorReadonly",
        "key": "alt+x c",
        "command": "mvext.transformToCamelCase"
      },
      {
        "key": "alt+x shift+c",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToConstantCase"
      },
      {
        "key": "alt+x p",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToPascalCase"
      },
      {
        "key": "alt+x k",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToKebabCase"
      },
      {
        "key": "alt+x s",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToSnakeCase"
      },
      {
        "key": "alt+x .",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToDotCase"
      },
      {
        "key": "alt+x /",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToPathCase"
      },
      {
        "key": "alt+x space",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToSentenceCase"
      },
      {
        "key": "alt+x n",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToNoCase"
      },
      {
        "key": "alt+x h",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToHeaderCase"
      },
      {
        "key": "alt+x u",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToUpperCase"
      },
      {
        "key": "alt+x l",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.transformToLowerCase"
      },
      {
        "key": "ctrl+alt+s",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.applyShellEdit"
      },
      {
        "key": "ctrl+alt+e",
        "when": "editorTextFocus && !editorReadonly",
        "command": "mvext.applyCurrentShellEdit"
      },
      {
        "key": "alt+o",
        "when": "editorTextFocus && editorLangId =~ /html|css|javascript|typescript/",
        "command": "mvext.quicklySwitchFile"
      }
    ]
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "scripts": {
    "prewatch": "npm pkg set 'enabledApiProposals=[\"terminalExecuteCommandEvent\"]' --json",
    "watch": "NODE_ENV=development rollup -c --watch",
    "pretest": "rimraf out && esbuild src/**/**.ts --platform=node --format=cjs --outdir=out --sourcemap --define:__DEV__=true",
    "prepare": "husky install",
    "vscode:prepublish": "npm pkg delete enabledApiProposals && rollup -c"
  },
  "devDependencies": {
    "@rollup/plugin-replace": "^5.0.5",
    "@rollup/plugin-terser": "^0.4.4",
    "@rollup/plugin-typescript": "^11.1.5",
    "@types/mocha": "10.0.1",
    "@types/node": "18.x",
    "@types/vscode": "^1.82.0",
    "@typescript-eslint/eslint-plugin": "^6.4.0",
    "@typescript-eslint/parser": "^6.4.0",
    "@vscode/dts": "^0.4.0",
    "esbuild": "^0.19.4",
    "eslint": "^8.48.0",
    "glob": "^10.3.4",
    "husky": "^8.0.3",
    "lint-staged": "^14.0.0",
    "mocha": "10.2.0",
    "prettier": "^3.0.2",
    "rimraf": "^5.0.1",
    "rollup": "^4.2.0",
    "tslib": "^2.6.2",
    "typescript": "^5.1.6"
  },
  "prettier": {
    "semi": false,
    "singleQuote": true,
    "bracketSameLine": true
  },
  "lint-staged": {
    "*.{js,ts}": "eslint --cache --fix",
    "*.{js,ts,json,md}": "prettier -w"
  }
}
